{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Yet Another Node.js Blogg Application API",
        "description": "Yet Another Node.js Blogg Application API",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "localhost:8000",
    "basePath": "/",
    "tags": [
        {
            "name": "Users",
            "description": "API for users in the system"
        }
    ],
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "login"
                ],
                "description": "login into system",
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "description": "User that we want to create",
                        "schema": {
                            "$ref": "#/definitions/login"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "permissions"
                    }
                }
            }
        },
        "/gettimeslot": {
            "get": {
                "tags": [
                    "timings"
                ],
                "description": "to get allowed timings",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "timings"
                    }
                }
            }
        },
        "/updatetimeslot": {
            "put": {
                "tags": [
                    "update times"
                ],
                "description": "to set allowed timings",
                "parameters": [
                    {
                        "name": "updatetimeslot",
                        "description": "to set time by alumni",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/setallowedtime"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "timings"
                    }
                }
            }
        },
        "/getschedules/{user}": {
            "get": {
                "tags": [
                    "get schedules"
                ],
                "description": "to get schedules timings",
                "parameters": [
                    {
                        "name": "user",
                        "description": "to get schedules",
                        "in": "path",
                        "required": true
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "get schedules"
                    }
                }
            }
        },

        "/getschedulesadmin": {
            "get": {
                "tags": [
                    "get schedules admin"
                ],
                "description": "to get schedules timings for admin",
                "parameters": [
                    {
                        "name": "admin",
                        "description": "to get schedules"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "get schedules"
                    }
                }
            }
        },

        "/setschedule": {
            "post": {
                "tags": [
                    "set schedule"
                ],
                "description": "to set alumni meet",
                "parameters": [
                    {
                        "name": "setschedule",
                        "description": "to create schedule meet with alumni",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/setschedule"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "timings"
                    }
                }
            }
        },
        "/deleteSchedule/{id}": {
            "delete": {
                "tags": [
                    "delete schedule"
                ],
                "description": "to delete alumni meet",
                "parameters": [
                    {
                        "name": "id",
                        "description": "to delete schedule meet with alumni",
                        "in": "path",
                        "required": true
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "timings"
                    }
                }
            }
        },
        "/approveSchedule": {
            "post": {
                "tags": [
                    "approve schedule"
                ],
                "description": "to approve alumni meet",
                "parameters": [
                    {
                        "name": "approveSchedule",
                        "description": "to approve schedule meet with alumni",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/approveSchedule"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "approveSchedule"
                    }
                }
            }
        }
    },
    "definitions": {
        "login": {
            "required": [
                "name",
                "password"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "uniqueItems": true
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "allowedtime": {},
        "setallowedtime": {
            "required": [
                "times"
            ],
            "properties": {
                "times": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "setschedule": {
            "required": [
                "registeredBy",
                "date",
                "timeslot",
                "approved"
            ],
            "properties": {
                "registeredBy": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "timeslot": {
                    "type": "string"
                },
                "approved": {
                    "type": "boolean"
                }
            }
        },
        "approveSchedule": {
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "uniqueItems": true
                }
            }
        }
    }
}